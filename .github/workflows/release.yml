name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Release Version
        required: true
      snapshotVersion:
        description: Snapshot Version
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
        fetch-depth: 0

    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        architecture: x64
    - name: Set Maven Version
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }}
    - name: Publish package
      run: mvn deploy -P release -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Set Chronos Version
      run: echo CHRONOS_VERSION=${{ github.event.inputs.releaseVersion }}  >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ env.CHRONOS_VERSION }}
        release_name: ${{ env.CHRONOS_VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Codbex Chronos - ${{ env.CHRONOS_VERSION }}
    
    - name: Set development version
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.snapshotVersion }}